cell get_c5() asm "c5 PUSH";
forall X -> cell force_cast_to_cell(X x) asm "NOP";
(cell, int) udict_get_ref_2?(cell dict, int key_len, int index) asm(index dict key_len) "DICTUGETREF" "NULLSWAPIFNOT";

tuple store_hash_to_content(int hash_key, slice slice_to_add, tuple final_result){
  int tuple_idx = 126 + (hash_key % 125);
  cell slice_hash_to_cell_map = final_result.at(tuple_idx);
  slice_hash_to_cell_map~udict_set_ref(256, hash_key, begin_cell().store_slice(slice_to_add).end_cell());
  tuple updated_tuple = empty_tuple(); int ct = 0;
  while (ct < 255){
    if (ct == tuple_idx){
      updated_tuple~tpush(slice_hash_to_cell_map);
    } else {
      updated_tuple~tpush(final_result.at(ct));
    } ct += 1;
  }
  return updated_tuple;
}

tuple store_address_to_hash(builder curr_address, int hash_key, tuple final_result){
  slice curr_address_sl = curr_address.end_cell().begin_parse();
  int addr_int_rep = curr_address_sl~load_uint(slice_bits(curr_address_sl));
  int tuple_idx = 1 + (addr_int_rep % 125);   ;; offset by one, modulo 125
  cell addr_to_slice_hash_map = final_result.at(tuple_idx);
  addr_to_slice_hash_map~udict_set(256, addr_int_rep, begin_cell().store_uint(hash_key, 256).end_cell().begin_parse());
  tuple updated_tuple = empty_tuple(); int ct = 0;
  while (ct < 255){
    if (ct == tuple_idx){
      updated_tuple~tpush(addr_to_slice_hash_map);
    } else {
      updated_tuple~tpush(final_result.at(ct));
    } ct += 1;
  }
  return updated_tuple;
}


tuple add_to_tuple(slice slice_to_add, builder curr_address, tuple final_result) {
  int slice_bit_ct = slice_bits(slice_to_add); slice_to_add = slice_to_add~load_bits(slice_bit_ct);  ;; remove refs
  int remainder = slice_bit_ct % 8; slice slice_to_hash = slice_to_add; int hash_key = -1;
  if (remainder){   ;; sha256 needs lengths divisible by 8, pad first
    int MOD = 57896044618658097711785492504343953926634992332820282019728792003956564819949;
    slice slice_prfx = begin_cell().store_uint(0, 8 - remainder).store_slice(slice_to_hash~load_bits(remainder)).end_cell().begin_parse();
    hash_key = (string_hash(slice_prfx) % MOD) + (string_hash(slice_to_hash) % MOD);
  } else {
    hash_key = string_hash(slice_to_hash);
  }
  final_result = store_address_to_hash(curr_address, hash_key, final_result);
  final_result = store_hash_to_content(hash_key, slice_to_add, final_result);
  return final_result;
}

tuple cycle_cell_decompose(cell curr_cell, builder curr_address, tuple final_result){
  slice curr_cell_slice = curr_cell.begin_parse();    ;; use slice_hash, pad to 8-bit, todo!!! rm refs no refs (now done)
  final_result = add_to_tuple(curr_cell_slice, curr_address, final_result);
  int children_count = slice_refs(curr_cell_slice);
  if (children_count > 0){
    int ct = 0;
    while (ct < children_count) {
      cell child_cell = curr_cell_slice~load_ref();
      builder child_address = curr_address.store_uint(ct, 2);
      final_result = cycle_cell_decompose(child_cell, child_address, final_result);
      ct += 1;
    }
  }
  return final_result;
}

tuple decomposite (cell big_cell, slice destination_address) method_id {
  tuple final_result = empty_tuple();
  cell meta_data = begin_cell()
    .store_uint(cell_hash(big_cell), 256)
    .store_uint(slice_hash(destination_address), 256)
    .store_slice(destination_address)
    .end_cell();
  final_result~tpush(meta_data);

  cell addr_to_slice_hash_map_dummy = new_dict(); int ct = 1;
  addr_to_slice_hash_map_dummy~udict_set(256, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, destination_address);
  while (ct < 126) {
    final_result~tpush(addr_to_slice_hash_map_dummy); ct += 1;
  }

  cell dummy_cell = begin_cell().end_cell(); cell slice_hash_to_cell_map = new_dict();
  slice_hash_to_cell_map~udict_set_ref(256, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, dummy_cell);
  while (ct < 255) {
    final_result~tpush(slice_hash_to_cell_map); ct += 1;
  }

  final_result = cycle_cell_decompose(big_cell, begin_cell().store_uint(3, 2), final_result); ct = 0;
  while (ct < 255) {
    (int cell_ct, int bits_ct, _) = compute_data_size(final_result.at(ct), 2000);
    while (cell_ct >= 1000) { ~dump(99); }
    while (bits_ct >= 40000) { ~dump(919); }
    ct += 1;
  }
  return final_result;
}

(cell, int) cycle_cell_compose(builder curr_address, tuple final_result) {
  cell curr_cell = force_cast_to_cell(1);   ;; placeholder for me if I exist
  ;; check if I exist
  slice curr_address_sl = curr_address.end_cell().begin_parse();
  int addr_int_rep = curr_address_sl~load_uint(slice_bits(curr_address_sl));
  int tuple_idx = 1 + (addr_int_rep % 125);   ;; offset by one, modulo 125
  cell addr_to_slice_hash_map = final_result.at(tuple_idx);
  (slice hash_info, int curr_exists) = udict_get?(addr_to_slice_hash_map, 256, addr_int_rep);
  if (curr_exists) {
    int hash_key = hash_info~load_uint(256);
    int hash_tuple_idx = 126 + (hash_key % 125);
    cell slice_hash_to_cell_map = final_result.at(hash_tuple_idx);
    (curr_cell, _) = udict_get_ref_2?(slice_hash_to_cell_map, 256, hash_key);
    builder curr_cell_builder = begin_cell().store_slice(curr_cell.begin_parse());
    int ct = 0;
    while (ct < 4) {
      (cell child, int child_exists) = cycle_cell_compose(curr_address.store_uint(ct, 2), final_result);
      if (child_exists){
        curr_cell_builder = curr_cell_builder.store_ref(child); ct += 1;
      } else { ct = 4; }
    }
    curr_cell = curr_cell_builder.end_cell();
  }
  return (curr_cell, curr_exists);
}

cell compose(tuple final_result){
  (cell large_cell, _) = cycle_cell_compose(begin_cell().store_uint(3, 2), final_result);
  return large_cell;
}

;; testable
() recv_internal (slice body) { ;;}
;; () holla (slice body) impure {
  slice my_data_sl = get_data().begin_parse();
  int operation_mode = slice_bits(my_data_sl);
  if (operation_mode == 0) {
    ;; first run
    cell addr_map = begin_cell().store_slice(body).end_cell();
    cell recvd_tuple_map = new_dict();
    recvd_tuple_map~udict_set_ref(8, 0, addr_map);
    cell my_data = begin_cell().store_uint(0, 8).store_dict(recvd_tuple_map).end_cell();
    set_data(my_data);
  } elseif (operation_mode == 1){
    ;; nothing to do, already sent payload
  } else {
    cell hash_to_cell = begin_cell().store_slice(body).end_cell();
    int curr_idx = my_data_sl~load_uint(8) + 1;
    cell recvd_tuple_map = my_data_sl~load_dict();

    if (curr_idx >= 251){
      ;; reached end of necessary tuple elements, begin send
      tuple final_results = empty_tuple(); int ct = 0;
      while (ct < curr_idx) {
        (cell tuple_elem, _) = udict_get_ref_2?(recvd_tuple_map, 8, ct);
        (int compute_cell_ct, int compute_bits_ct, int compute_ref_ct) = compute_data_size(tuple_elem, 1200);
        while (compute_cell_ct >= 1000) { ~dump(99); }
        while (compute_bits_ct >= 40000) { ~dump(99); }
        final_results~tpush(tuple_elem); ct += 1;
      }

      slice meta_data_sl = final_results.at(0).begin_parse();
      int large_cell_hash = meta_data_sl~load_uint(256);
      int dest_addr_hash = meta_data_sl~load_uint(256);
      slice dest_address = meta_data_sl;
      (dest_address, _) = udict_get?(final_results.at(1), 256, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);
      cell large_cell = compose(final_results);
      ;; ~dump([299, cell_hash(large_cell), large_cell]);
      cell msg_to_send = begin_cell()
        .store_uint(0x18, 6)
        .store_slice(dest_address)
        .store_grams(0)
        .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 0)
        .store_uint(1, 1)
        .store_ref(large_cell)
        .end_cell();
      send_raw_message(msg_to_send, 0);
      ;;set_data(begin_cell().store_uint(1, 1).end_cell());
      while (large_cell_hash != cell_hash(large_cell)) { ~dump(99); }
      while (dest_addr_hash != slice_hash(dest_address)) { ~dump(99); }
    } else {
      ;; save this, more usefuls incoming
      recvd_tuple_map~udict_set_ref(8, curr_idx, hash_to_cell);
      cell my_data = begin_cell().store_uint(curr_idx, 8).store_dict(recvd_tuple_map).end_cell();
      set_data(my_data);
    }
  }
}

(int, int) fme (int a, int b) method_id {
  cell msg = begin_cell()
    .store_uint(0x312b322b332b342b352b362b372b382b392b31302b31312b31322b31332b3134, 256)
    .store_uint(0x2b31352b31362b31372b31382b31392b32302b32312b32322b32332b32342b32, 256)
    .store_uint(0x352b32362b32372b32382b32392b33302b33312b33322b33332b33342b33352b, 256)
    .store_uint(0x33362b33372b33382b33392b34302b34312b34322b34332b34342b34352b34, 248)
    .store_ref(begin_cell()
       .store_uint(0x362b34372b34382b34392b35302b35312b35322b35332b35342b35352b35362b, 256)
       .store_uint(0x35372b35382b35392b36302b36312b36322b36332b36342b36352b36362b3637, 256)
       .store_uint(0x2b36382b36392b37302b37312b37322b37332b37342b37352b37362b37372b37, 256)
       .store_uint(0x382b37392b38302b38312b38322b38332b38342b38352b38362b38372b3838, 248)
       .store_ref(begin_cell()
           .store_uint(0x2b38392b39302b39312b39322b39332b39342b39352b39362b39372b39382b39, 256)
           .store_uint(0x392b313030, 40)
           .store_ref(begin_cell()
       .store_uint(0x362b34372b34382b34392b35302b35312b35322b35332b35342b35352b35362b, 256)
       .store_uint(0x35372b35382b35392b36302b36312b36322b36332b36342b36352b36362b3637, 256)
       .store_uint(0x2b36382b36392b37302b37312b37322b37332b37342b37352b37362b37372b37, 256)
       .store_uint(0x382b37392b38302b38312b38322b38332b38342b38352b38362b38372b3838, 248)
       .store_ref(begin_cell()
           .store_uint(0x2b38392b39302b39312b39322b39332b39342b39352b39362b39372b39382b39, 256)
           .store_uint(0x392b313030, 40)
           .end_cell())
       .end_cell())
           .end_cell())
       .end_cell())
    .store_ref(begin_cell()
       .store_uint(0x362b34372b34382b34392b35302b35312b35322b35332b35342b35352b35362b, 256)
       .store_uint(0x35372b35382b35392b36302b36312b36322b36332b36342b36352b36362b3637, 256)
       .store_uint(0x2b36382b36392b37302b37312b37322b37332b37342b37352b37362b37372b37, 256)
       .store_uint(0x382b37392b38302b38312b38322b38332b38342b38352b38362b38372b3838, 248)
       .store_ref(begin_cell()
           .store_uint(0x2b38392b39302b39312b39322b39332b39342b39352b39362b39372b39382b39, 256)
           .store_uint(0x392b313030, 40)
           .end_cell())
       .end_cell())
    .store_ref(begin_cell()
       .store_uint(0x362b34372b34382b34392b35302b35312b35322b35332b35342b35352b35362b, 256)
       .store_uint(0x35372b35382b35392b36302b36312b36322b36332b36342b36352b36362b3637, 256)
       .store_uint(0x2b36382b36392b37302b37312b37322b37332b37342b37352b37362b37372b37, 256)
       .store_uint(0x382b37392b38302b38312b38322b38332b38342b38352b38362b38372b3838, 248)
       .store_ref(begin_cell()
           .store_uint(0x2b38392b39302b39312b39322b39332b39342b39352b39362b39372b39382b39, 256)
           .store_uint(0x392b313030, 40)
           .end_cell())
       .end_cell())
       .store_ref(begin_cell()
       .store_uint(0x362b34372b34382b34392b35302b35312b35322b35332b35342b35352b35362b, 256)
       .store_uint(0x35372b35382b35392b36302b36312b36322b36332b36342b36352b36362b3637, 256)
       .store_uint(0x2b36382b36392b37302b37312b37322b37332b37342b37352b37362b37372b37, 256)
       .store_uint(0x382b37392b38302b38312b38322b38332b38342b38352b38362b38372b3838, 248)
       .store_ref(begin_cell()
           .store_uint(0x2b38392b39302b39312b39322b39332b39342b39352b39362b39372b39382b39, 256)
           .store_uint(0x392b313030, 40)
           .end_cell())
       .end_cell())
  .end_cell();
  ;; cell msg = begin_cell().store_uint(0xd97, 256).store_ref(begin_cell().store_uint(0x178, 256).store_ref(begin_cell().store_uint(0xbb2, 256).store_ref(begin_cell().store_uint(0xb97, 256).store_ref(begin_cell().store_uint(0xba4, 256).store_ref(begin_cell().store_uint(0x93, 256).store_ref(begin_cell().store_uint(0x911, 256).store_ref(begin_cell().store_uint(0x2a9, 256).store_ref(begin_cell().store_uint(0x35, 256).end_cell()).store_ref(begin_cell().store_uint(0x1e3, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x431, 256).store_ref(begin_cell().store_uint(0x56d, 256).end_cell()).store_ref(begin_cell().store_uint(0xa6b, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x409, 256).store_ref(begin_cell().store_uint(0xc38, 256).store_ref(begin_cell().store_uint(0xe60, 256).end_cell()).store_ref(begin_cell().store_uint(0x4d5, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xdab, 256).store_ref(begin_cell().store_uint(0x727, 256).end_cell()).store_ref(begin_cell().store_uint(0xc8f, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xd87, 256).store_ref(begin_cell().store_uint(0xff7, 256).store_ref(begin_cell().store_uint(0xa33, 256).store_ref(begin_cell().store_uint(0x522, 256).end_cell()).store_ref(begin_cell().store_uint(0x741, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xf5e, 256).store_ref(begin_cell().store_uint(0x2c2, 256).end_cell()).store_ref(begin_cell().store_uint(0xf15, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xde3, 256).store_ref(begin_cell().store_uint(0x132, 256).store_ref(begin_cell().store_uint(0x6d, 256).end_cell()).store_ref(begin_cell().store_uint(0xd0a, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x3ea, 256).store_ref(begin_cell().store_uint(0x1a3, 256).end_cell()).store_ref(begin_cell().store_uint(0x4f1, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x667, 256).store_ref(begin_cell().store_uint(0x867, 256).store_ref(begin_cell().store_uint(0x701, 256).store_ref(begin_cell().store_uint(0x7f0, 256).store_ref(begin_cell().store_uint(0x943, 256).end_cell()).store_ref(begin_cell().store_uint(0x48b, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x381, 256).store_ref(begin_cell().store_uint(0xaf3, 256).end_cell()).store_ref(begin_cell().store_uint(0xf0c, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x1b6, 256).store_ref(begin_cell().store_uint(0x75c, 256).store_ref(begin_cell().store_uint(0x88e, 256).end_cell()).store_ref(begin_cell().store_uint(0x301, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x6af, 256).store_ref(begin_cell().store_uint(0x7c, 256).end_cell()).store_ref(begin_cell().store_uint(0x4a7, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xf79, 256).store_ref(begin_cell().store_uint(0x174, 256).store_ref(begin_cell().store_uint(0xe87, 256).store_ref(begin_cell().store_uint(0x93c, 256).end_cell()).store_ref(begin_cell().store_uint(0x3c3, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x81e, 256).store_ref(begin_cell().store_uint(0x966, 256).end_cell()).store_ref(begin_cell().store_uint(0x9e1, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x548, 256).store_ref(begin_cell().store_uint(0xb8c, 256).store_ref(begin_cell().store_uint(0x6d9, 256).end_cell()).store_ref(begin_cell().store_uint(0x464, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc30, 256).store_ref(begin_cell().store_uint(0xfc3, 256).end_cell()).store_ref(begin_cell().store_uint(0xfda, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x39d, 256).store_ref(begin_cell().store_uint(0x9ed, 256).store_ref(begin_cell().store_uint(0xcf9, 256).store_ref(begin_cell().store_uint(0xa4, 256).store_ref(begin_cell().store_uint(0x4b4, 256).store_ref(begin_cell().store_uint(0x326, 256).end_cell()).store_ref(begin_cell().store_uint(0x317, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xbe8, 256).store_ref(begin_cell().store_uint(0x6ad, 256).end_cell()).store_ref(begin_cell().store_uint(0x9b, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x538, 256).store_ref(begin_cell().store_uint(0x77, 256).store_ref(begin_cell().store_uint(0xf7c, 256).end_cell()).store_ref(begin_cell().store_uint(0xfbb, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x7b1, 256).store_ref(begin_cell().store_uint(0xabb, 256).end_cell()).store_ref(begin_cell().store_uint(0x1ea, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x845, 256).store_ref(begin_cell().store_uint(0x804, 256).store_ref(begin_cell().store_uint(0xb0a, 256).store_ref(begin_cell().store_uint(0xde6, 256).end_cell()).store_ref(begin_cell().store_uint(0x2fb, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe54, 256).store_ref(begin_cell().store_uint(0xd5b, 256).end_cell()).store_ref(begin_cell().store_uint(0x997, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xb0d, 256).store_ref(begin_cell().store_uint(0xe8, 256).store_ref(begin_cell().store_uint(0xfcf, 256).end_cell()).store_ref(begin_cell().store_uint(0x325, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x500, 256).store_ref(begin_cell().store_uint(0xb92, 256).end_cell()).store_ref(begin_cell().store_uint(0x58d, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x5d, 256).store_ref(begin_cell().store_uint(0x59, 256).store_ref(begin_cell().store_uint(0xa04, 256).store_ref(begin_cell().store_uint(0x113, 256).store_ref(begin_cell().store_uint(0x3fd, 256).end_cell()).store_ref(begin_cell().store_uint(0xf63, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x653, 256).store_ref(begin_cell().store_uint(0xcaf, 256).end_cell()).store_ref(begin_cell().store_uint(0x730, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x92e, 256).store_ref(begin_cell().store_uint(0x991, 256).store_ref(begin_cell().store_uint(0x419, 256).end_cell()).store_ref(begin_cell().store_uint(0xb50, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x252, 256).store_ref(begin_cell().store_uint(0x7c4, 256).end_cell()).store_ref(begin_cell().store_uint(0x639, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x140, 256).store_ref(begin_cell().store_uint(0x6d4, 256).store_ref(begin_cell().store_uint(0x61d, 256).store_ref(begin_cell().store_uint(0xc1b, 256).end_cell()).store_ref(begin_cell().store_uint(0xdb2, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xdca, 256).store_ref(begin_cell().store_uint(0x908, 256).end_cell()).store_ref(begin_cell().store_uint(0x85d, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x4a5, 256).store_ref(begin_cell().store_uint(0xd70, 256).store_ref(begin_cell().store_uint(0x665, 256).end_cell()).store_ref(begin_cell().store_uint(0xadb, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xaff, 256).store_ref(begin_cell().store_uint(0xfa8, 256).end_cell()).store_ref(begin_cell().store_uint(0x38d, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x3ac, 256).store_ref(begin_cell().store_uint(0x498, 256).store_ref(begin_cell().store_uint(0xf, 256).store_ref(begin_cell().store_uint(0x5d3, 256).store_ref(begin_cell().store_uint(0xc23, 256).store_ref(begin_cell().store_uint(0x15b, 256).store_ref(begin_cell().store_uint(0xa01, 256).end_cell()).store_ref(begin_cell().store_uint(0xe63, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x447, 256).store_ref(begin_cell().store_uint(0x28a, 256).end_cell()).store_ref(begin_cell().store_uint(0xa51, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x2a5, 256).store_ref(begin_cell().store_uint(0x291, 256).store_ref(begin_cell().store_uint(0xf25, 256).end_cell()).store_ref(begin_cell().store_uint(0xc19, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xb73, 256).store_ref(begin_cell().store_uint(0x876, 256).end_cell()).store_ref(begin_cell().store_uint(0x346, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xb9c, 256).store_ref(begin_cell().store_uint(0x4b7, 256).store_ref(begin_cell().store_uint(0x647, 256).store_ref(begin_cell().store_uint(0x21f, 256).end_cell()).store_ref(begin_cell().store_uint(0xe82, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xfac, 256).store_ref(begin_cell().store_uint(0xbe3, 256).end_cell()).store_ref(begin_cell().store_uint(0x9e5, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xad8, 256).store_ref(begin_cell().store_uint(0x614, 256).store_ref(begin_cell().store_uint(0xd72, 256).end_cell()).store_ref(begin_cell().store_uint(0xc5, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc02, 256).store_ref(begin_cell().store_uint(0x540, 256).end_cell()).store_ref(begin_cell().store_uint(0x3cc, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xec3, 256).store_ref(begin_cell().store_uint(0xcbe, 256).store_ref(begin_cell().store_uint(0xe9c, 256).store_ref(begin_cell().store_uint(0xc48, 256).store_ref(begin_cell().store_uint(0xee6, 256).end_cell()).store_ref(begin_cell().store_uint(0x72e, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xd27, 256).store_ref(begin_cell().store_uint(0x58e, 256).end_cell()).store_ref(begin_cell().store_uint(0xb37, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe1f, 256).store_ref(begin_cell().store_uint(0x259, 256).store_ref(begin_cell().store_uint(0xb8a, 256).end_cell()).store_ref(begin_cell().store_uint(0x857, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe03, 256).store_ref(begin_cell().store_uint(0x80a, 256).end_cell()).store_ref(begin_cell().store_uint(0xfe8, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x2b3, 256).store_ref(begin_cell().store_uint(0x609, 256).store_ref(begin_cell().store_uint(0xabe, 256).store_ref(begin_cell().store_uint(0x3e6, 256).end_cell()).store_ref(begin_cell().store_uint(0x8c2, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x902, 256).store_ref(begin_cell().store_uint(0x69a, 256).end_cell()).store_ref(begin_cell().store_uint(0x3ed, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x9ae, 256).store_ref(begin_cell().store_uint(0x9d7, 256).store_ref(begin_cell().store_uint(0xf19, 256).end_cell()).store_ref(begin_cell().store_uint(0x5bb, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x64c, 256).store_ref(begin_cell().store_uint(0xd5b, 256).end_cell()).store_ref(begin_cell().store_uint(0x750, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x211, 256).store_ref(begin_cell().store_uint(0x597, 256).store_ref(begin_cell().store_uint(0x9c8, 256).store_ref(begin_cell().store_uint(0x949, 256).store_ref(begin_cell().store_uint(0xa82, 256).store_ref(begin_cell().store_uint(0x72f, 256).end_cell()).store_ref(begin_cell().store_uint(0x791, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x368, 256).store_ref(begin_cell().store_uint(0x3b8, 256).end_cell()).store_ref(begin_cell().store_uint(0x85d, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x17a, 256).store_ref(begin_cell().store_uint(0x8fe, 256).store_ref(begin_cell().store_uint(0xf1a, 256).end_cell()).store_ref(begin_cell().store_uint(0xc40, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xb29, 256).store_ref(begin_cell().store_uint(0x8de, 256).end_cell()).store_ref(begin_cell().store_uint(0xea1, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x726, 256).store_ref(begin_cell().store_uint(0xb1c, 256).store_ref(begin_cell().store_uint(0x4f9, 256).store_ref(begin_cell().store_uint(0x7f8, 256).end_cell()).store_ref(begin_cell().store_uint(0x668, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x512, 256).store_ref(begin_cell().store_uint(0xec, 256).end_cell()).store_ref(begin_cell().store_uint(0xc86, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc84, 256).store_ref(begin_cell().store_uint(0xba4, 256).store_ref(begin_cell().store_uint(0x95d, 256).end_cell()).store_ref(begin_cell().store_uint(0x522, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xf89, 256).store_ref(begin_cell().store_uint(0xe6b, 256).end_cell()).store_ref(begin_cell().store_uint(0xb46, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x28d, 256).store_ref(begin_cell().store_uint(0xc80, 256).store_ref(begin_cell().store_uint(0x4b2, 256).store_ref(begin_cell().store_uint(0xe97, 256).store_ref(begin_cell().store_uint(0x533, 256).end_cell()).store_ref(begin_cell().store_uint(0xdd8, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xd04, 256).store_ref(begin_cell().store_uint(0x205, 256).end_cell()).store_ref(begin_cell().store_uint(0xf72, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x7a, 256).store_ref(begin_cell().store_uint(0xbb3, 256).store_ref(begin_cell().store_uint(0x825, 256).end_cell()).store_ref(begin_cell().store_uint(0x8ef, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x9e5, 256).store_ref(begin_cell().store_uint(0xb2c, 256).end_cell()).store_ref(begin_cell().store_uint(0xf6f, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x106, 256).store_ref(begin_cell().store_uint(0x26, 256).store_ref(begin_cell().store_uint(0x8d0, 256).store_ref(begin_cell().store_uint(0xff5, 256).end_cell()).store_ref(begin_cell().store_uint(0xd19, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xfa9, 256).store_ref(begin_cell().store_uint(0xfac, 256).end_cell()).store_ref(begin_cell().store_uint(0x3a9, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x8e5, 256).store_ref(begin_cell().store_uint(0x7e9, 256).store_ref(begin_cell().store_uint(0x40d, 256).end_cell()).store_ref(begin_cell().store_uint(0x2ed, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x421, 256).store_ref(begin_cell().store_uint(0x9da, 256).end_cell()).store_ref(begin_cell().store_uint(0x271, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x1d0, 256).store_ref(begin_cell().store_uint(0x22f, 256).store_ref(begin_cell().store_uint(0xf63, 256).store_ref(begin_cell().store_uint(0x628, 256).store_ref(begin_cell().store_uint(0xe83, 256).store_ref(begin_cell().store_uint(0xd5f, 256).store_ref(begin_cell().store_uint(0xd1c, 256).store_ref(begin_cell().store_uint(0x3f5, 256).end_cell()).store_ref(begin_cell().store_uint(0xed6, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xf2, 256).store_ref(begin_cell().store_uint(0x46f, 256).end_cell()).store_ref(begin_cell().store_uint(0x275, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x26e, 256).store_ref(begin_cell().store_uint(0x42a, 256).store_ref(begin_cell().store_uint(0x2db, 256).end_cell()).store_ref(begin_cell().store_uint(0x8c7, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x29b, 256).store_ref(begin_cell().store_uint(0x97f, 256).end_cell()).store_ref(begin_cell().store_uint(0xfb0, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xb6f, 256).store_ref(begin_cell().store_uint(0xec2, 256).store_ref(begin_cell().store_uint(0x9a5, 256).store_ref(begin_cell().store_uint(0x682, 256).end_cell()).store_ref(begin_cell().store_uint(0x69c, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x1ba, 256).store_ref(begin_cell().store_uint(0x51f, 256).end_cell()).store_ref(begin_cell().store_uint(0x810, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x337, 256).store_ref(begin_cell().store_uint(0x362, 256).store_ref(begin_cell().store_uint(0x6ec, 256).end_cell()).store_ref(begin_cell().store_uint(0x652, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc2e, 256).store_ref(begin_cell().store_uint(0xb00, 256).end_cell()).store_ref(begin_cell().store_uint(0xf95, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc22, 256).store_ref(begin_cell().store_uint(0x963, 256).store_ref(begin_cell().store_uint(0x120, 256).store_ref(begin_cell().store_uint(0x1c2, 256).store_ref(begin_cell().store_uint(0x6ed, 256).end_cell()).store_ref(begin_cell().store_uint(0x1cb, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xeb2, 256).store_ref(begin_cell().store_uint(0x48b, 256).end_cell()).store_ref(begin_cell().store_uint(0x478, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x85d, 256).store_ref(begin_cell().store_uint(0xd59, 256).store_ref(begin_cell().store_uint(0xb0, 256).end_cell()).store_ref(begin_cell().store_uint(0x729, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x856, 256).store_ref(begin_cell().store_uint(0xefc, 256).end_cell()).store_ref(begin_cell().store_uint(0xcd0, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xa3e, 256).store_ref(begin_cell().store_uint(0xafd, 256).store_ref(begin_cell().store_uint(0xa00, 256).store_ref(begin_cell().store_uint(0xd3a, 256).end_cell()).store_ref(begin_cell().store_uint(0xdb2, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xfbe, 256).store_ref(begin_cell().store_uint(0x655, 256).end_cell()).store_ref(begin_cell().store_uint(0x8ef, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xcc7, 256).store_ref(begin_cell().store_uint(0x671, 256).store_ref(begin_cell().store_uint(0xcfa, 256).end_cell()).store_ref(begin_cell().store_uint(0xebe, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe3f, 256).store_ref(begin_cell().store_uint(0x6d2, 256).end_cell()).store_ref(begin_cell().store_uint(0x543, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xfb2, 256).store_ref(begin_cell().store_uint(0xac, 256).store_ref(begin_cell().store_uint(0x194, 256).store_ref(begin_cell().store_uint(0x579, 256).store_ref(begin_cell().store_uint(0xd12, 256).store_ref(begin_cell().store_uint(0x52, 256).end_cell()).store_ref(begin_cell().store_uint(0xb11, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x871, 256).store_ref(begin_cell().store_uint(0xbc6, 256).end_cell()).store_ref(begin_cell().store_uint(0x883, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x5f0, 256).store_ref(begin_cell().store_uint(0xb4c, 256).store_ref(begin_cell().store_uint(0xbaf, 256).end_cell()).store_ref(begin_cell().store_uint(0xebf, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xce, 256).store_ref(begin_cell().store_uint(0x260, 256).end_cell()).store_ref(begin_cell().store_uint(0x8a7, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x399, 256).store_ref(begin_cell().store_uint(0x178, 256).store_ref(begin_cell().store_uint(0x882, 256).store_ref(begin_cell().store_uint(0xa94, 256).end_cell()).store_ref(begin_cell().store_uint(0xdd, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x188, 256).store_ref(begin_cell().store_uint(0x7cb, 256).end_cell()).store_ref(begin_cell().store_uint(0x45d, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x13d, 256).store_ref(begin_cell().store_uint(0xd5b, 256).store_ref(begin_cell().store_uint(0x267, 256).end_cell()).store_ref(begin_cell().store_uint(0x2d5, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x51a, 256).store_ref(begin_cell().store_uint(0x9db, 256).end_cell()).store_ref(begin_cell().store_uint(0x43d, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xfd2, 256).store_ref(begin_cell().store_uint(0x2dc, 256).store_ref(begin_cell().store_uint(0xe42, 256).store_ref(begin_cell().store_uint(0x940, 256).store_ref(begin_cell().store_uint(0xd74, 256).end_cell()).store_ref(begin_cell().store_uint(0x717, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x76c, 256).store_ref(begin_cell().store_uint(0x396, 256).end_cell()).store_ref(begin_cell().store_uint(0xe45, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x811, 256).store_ref(begin_cell().store_uint(0x386, 256).store_ref(begin_cell().store_uint(0x20d, 256).end_cell()).store_ref(begin_cell().store_uint(0x1e9, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xd65, 256).store_ref(begin_cell().store_uint(0x7, 256).end_cell()).store_ref(begin_cell().store_uint(0x2b8, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x8e3, 256).store_ref(begin_cell().store_uint(0x465, 256).store_ref(begin_cell().store_uint(0x234, 256).store_ref(begin_cell().store_uint(0xd49, 256).end_cell()).store_ref(begin_cell().store_uint(0xccd, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x3b0, 256).store_ref(begin_cell().store_uint(0xcc9, 256).end_cell()).store_ref(begin_cell().store_uint(0xf55, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x9f6, 256).store_ref(begin_cell().store_uint(0xdff, 256).store_ref(begin_cell().store_uint(0x3ef, 256).end_cell()).store_ref(begin_cell().store_uint(0x27f, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x8e8, 256).store_ref(begin_cell().store_uint(0x280, 256).end_cell()).store_ref(begin_cell().store_uint(0x333, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xa22, 256).store_ref(begin_cell().store_uint(0xa0, 256).store_ref(begin_cell().store_uint(0x464, 256).store_ref(begin_cell().store_uint(0x681, 256).store_ref(begin_cell().store_uint(0x53b, 256).store_ref(begin_cell().store_uint(0x536, 256).store_ref(begin_cell().store_uint(0x47, 256).end_cell()).store_ref(begin_cell().store_uint(0x683, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x48a, 256).store_ref(begin_cell().store_uint(0xfc, 256).end_cell()).store_ref(begin_cell().store_uint(0xf8, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xd0d, 256).store_ref(begin_cell().store_uint(0xe86, 256).store_ref(begin_cell().store_uint(0xe25, 256).end_cell()).store_ref(begin_cell().store_uint(0x9ff, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x169, 256).store_ref(begin_cell().store_uint(0xcfc, 256).end_cell()).store_ref(begin_cell().store_uint(0xfe2, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xbec, 256).store_ref(begin_cell().store_uint(0x4d9, 256).store_ref(begin_cell().store_uint(0xf9a, 256).store_ref(begin_cell().store_uint(0xd84, 256).end_cell()).store_ref(begin_cell().store_uint(0xb90, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xa8b, 256).store_ref(begin_cell().store_uint(0xe23, 256).end_cell()).store_ref(begin_cell().store_uint(0x9f7, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x7f3, 256).store_ref(begin_cell().store_uint(0x83a, 256).store_ref(begin_cell().store_uint(0xf41, 256).end_cell()).store_ref(begin_cell().store_uint(0xfca, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x6c2, 256).store_ref(begin_cell().store_uint(0xd5c, 256).end_cell()).store_ref(begin_cell().store_uint(0x630, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc7, 256).store_ref(begin_cell().store_uint(0x4fd, 256).store_ref(begin_cell().store_uint(0x5fb, 256).store_ref(begin_cell().store_uint(0x59, 256).store_ref(begin_cell().store_uint(0x49e, 256).end_cell()).store_ref(begin_cell().store_uint(0xd36, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xab1, 256).store_ref(begin_cell().store_uint(0x426, 256).end_cell()).store_ref(begin_cell().store_uint(0xc6a, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x627, 256).store_ref(begin_cell().store_uint(0x20, 256).store_ref(begin_cell().store_uint(0xe42, 256).end_cell()).store_ref(begin_cell().store_uint(0x95, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x9a9, 256).store_ref(begin_cell().store_uint(0xf03, 256).end_cell()).store_ref(begin_cell().store_uint(0x391, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x1fd, 256).store_ref(begin_cell().store_uint(0xde7, 256).store_ref(begin_cell().store_uint(0x3b9, 256).store_ref(begin_cell().store_uint(0x156, 256).end_cell()).store_ref(begin_cell().store_uint(0x3ad, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x749, 256).store_ref(begin_cell().store_uint(0xebc, 256).end_cell()).store_ref(begin_cell().store_uint(0x864, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x600, 256).store_ref(begin_cell().store_uint(0x19b, 256).store_ref(begin_cell().store_uint(0xb38, 256).end_cell()).store_ref(begin_cell().store_uint(0xbfe, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x946, 256).store_ref(begin_cell().store_uint(0xcfd, 256).end_cell()).store_ref(begin_cell().store_uint(0x91e, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xfe2, 256).store_ref(begin_cell().store_uint(0x616, 256).store_ref(begin_cell().store_uint(0xd7, 256).store_ref(begin_cell().store_uint(0x6ab, 256).store_ref(begin_cell().store_uint(0x22, 256).store_ref(begin_cell().store_uint(0x351, 256).end_cell()).store_ref(begin_cell().store_uint(0x49b, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x1b9, 256).store_ref(begin_cell().store_uint(0x4c3, 256).end_cell()).store_ref(begin_cell().store_uint(0x9f1, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xb5a, 256).store_ref(begin_cell().store_uint(0xcfc, 256).store_ref(begin_cell().store_uint(0x32d, 256).end_cell()).store_ref(begin_cell().store_uint(0x4c4, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x70f, 256).store_ref(begin_cell().store_uint(0xccb, 256).end_cell()).store_ref(begin_cell().store_uint(0xe39, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xcc, 256).store_ref(begin_cell().store_uint(0xaf8, 256).store_ref(begin_cell().store_uint(0xc86, 256).store_ref(begin_cell().store_uint(0x9fb, 256).end_cell()).store_ref(begin_cell().store_uint(0x993, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x280, 256).store_ref(begin_cell().store_uint(0x5b8, 256).end_cell()).store_ref(begin_cell().store_uint(0xddb, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe4b, 256).store_ref(begin_cell().store_uint(0x3b8, 256).store_ref(begin_cell().store_uint(0x8f8, 256).end_cell()).store_ref(begin_cell().store_uint(0x29a, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x928, 256).store_ref(begin_cell().store_uint(0xcba, 256).end_cell()).store_ref(begin_cell().store_uint(0x24e, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x169, 256).store_ref(begin_cell().store_uint(0xbd9, 256).store_ref(begin_cell().store_uint(0x96e, 256).store_ref(begin_cell().store_uint(0xe2b, 256).store_ref(begin_cell().store_uint(0x9f8, 256).end_cell()).store_ref(begin_cell().store_uint(0xb80, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x39e, 256).store_ref(begin_cell().store_uint(0xc22, 256).end_cell()).store_ref(begin_cell().store_uint(0xc4d, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x92f, 256).store_ref(begin_cell().store_uint(0x5a6, 256).store_ref(begin_cell().store_uint(0x8b1, 256).end_cell()).store_ref(begin_cell().store_uint(0x993, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe95, 256).store_ref(begin_cell().store_uint(0x770, 256).end_cell()).store_ref(begin_cell().store_uint(0xf9f, 256).end_cell()).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xc42, 256).store_ref(begin_cell().store_uint(0xf40, 256).store_ref(begin_cell().store_uint(0x3b1, 256).store_ref(begin_cell().store_uint(0x954, 256).end_cell()).store_ref(begin_cell().store_uint(0xdd7, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0x26b, 256).store_ref(begin_cell().store_uint(0x2d7, 256).end_cell()).store_ref(begin_cell().store_uint(0x69e, 256).end_cell()).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xebc, 256).store_ref(begin_cell().store_uint(0xc66, 256).store_ref(begin_cell().store_uint(0xcd2, 256).end_cell()).store_ref(begin_cell().store_uint(0xa3f, 256).end_cell()).end_cell()).store_ref(begin_cell().store_uint(0xe84, 256).store_ref(begin_cell().store_uint(0xb2, 256).end_cell()).store_ref(begin_cell().store_uint(0x200, 256).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell()).end_cell();

  slice dst = begin_cell().store_uint(8, 8).end_cell().begin_parse();
  tuple to_send = decomposite(msg, dst);
  ~dump(91);
  ;; cell large_cell = compose(to_send);
  ;; int ct = 0; while (ct < 255){ holla(to_send.at(ct).begin_parse()); ct += 1; }
  ~dump([199, cell_hash(msg), msg, msg.begin_parse()]);
  ~dump(923);
  return (3, 4);
}